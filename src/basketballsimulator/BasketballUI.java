package basketballsimulator;

/**
 * A simple basketball game simulator
 * @author Cole Petersen
 */

import java.util.Random;

public class BasketballUI extends javax.swing.JFrame {

    /**
     * Creates new form BasketballUI
     */
    
    public BasketballUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WelcomeLabel = new javax.swing.JLabel();
        Team1Label = new javax.swing.JLabel();
        Team1NameField = new javax.swing.JTextField();
        Team1Label1 = new javax.swing.JLabel();
        Team1ORLabel = new javax.swing.JLabel();
        Team1ORField = new javax.swing.JTextField();
        Team1199 = new javax.swing.JLabel();
        Team1DRLabel = new javax.swing.JLabel();
        Team1DRField = new javax.swing.JTextField();
        Team1Label5 = new javax.swing.JLabel();
        Team1Label2 = new javax.swing.JLabel();
        Team1ORLabel1 = new javax.swing.JLabel();
        Team2ORField = new javax.swing.JTextField();
        Team1200 = new javax.swing.JLabel();
        Team1DRLabel1 = new javax.swing.JLabel();
        Team2DRField = new javax.swing.JTextField();
        Team1Label6 = new javax.swing.JLabel();
        Team1Label3 = new javax.swing.JLabel();
        Team2NameField = new javax.swing.JTextField();
        PlayGameButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Basketball");
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(266, 320));

        WelcomeLabel.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        WelcomeLabel.setText("Welcome!");

        Team1Label.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Team1Label.setText("Team 1");

        Team1Label1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1Label1.setText("Name");

        Team1ORLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1ORLabel.setText("Offensive Rating");

        Team1199.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1199.setText("(1-99)");

        Team1DRLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1DRLabel.setText("Defensive Rating");

        Team1Label5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1Label5.setText("(1-99)");

        Team1Label2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1Label2.setText("Name");

        Team1ORLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1ORLabel1.setText("Offensive Rating");

        Team1200.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1200.setText("(1-99)");

        Team1DRLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1DRLabel1.setText("Defensive Rating");

        Team1Label6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Team1Label6.setText("(1-99)");

        Team1Label3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Team1Label3.setText("Team 2");

        PlayGameButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        PlayGameButton.setText("Play Game");
        PlayGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayGameButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WelcomeLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Team1Label5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Team1DRField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Team1DRLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Team1199)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Team1ORField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Team1ORLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team1Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team1NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Team1200)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Team2ORField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Team1Label6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Team2DRField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Team1DRLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team1ORLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team2NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Team1Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Team1Label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(WelcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Team1Label3)
                    .addComponent(Team1Label))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Team1Label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Team2NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Team1Label1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Team1NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Team1ORLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Team2ORField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Team1200))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Team1DRLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Team2DRField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Team1Label6)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Team1ORLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Team1ORField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Team1199))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Team1DRLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Team1DRField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Team1Label5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayGameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * PlayGameButtonActionPerformed:
     *          code to be executed when Play Game button is clicked
     * @param   evt: button clicked
     */
    private void PlayGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayGameButtonActionPerformed
        
        Team Team1 = new Team();
        Team Team2 = new Team();
        
        String enteredT1Name = Team1NameField.getText();
        String enteredT1OR = Team1ORField.getText();
        String enteredT1DR = Team1DRField.getText();
        String enteredT2Name = Team2NameField.getText();
        String enteredT2OR = Team2ORField.getText();
        String enteredT2DR = Team2DRField.getText();
        
        boolean ok = true;
        
        // get team names
        ok = SetName(enteredT1Name, Team1, ok);
        ok = SetName(enteredT2Name, Team2, ok);
        
        
        // set ratings
        try{
            ok = SetRating(enteredT1OR, Team1, true, ok);
            ok = SetRating(enteredT1DR, Team1, false, ok);
            ok = SetRating(enteredT2OR, Team2, true, ok);
            ok = SetRating(enteredT2DR, Team2, false, ok);
            
        }
        catch (NumberFormatException e){
            ErrorMessage("At least one rating is not an integer");
            ok = false;
        }
        
        // play game
        if(ok){
            
            SetExpScore(Team1, Team2);
            SetExpScore(Team2, Team1);

            GetScore(Team1);
            GetScore(Team2);

            // print score
            jLabel1.setText("Game over.");
            jLabel2.setText(Team1.name + " " + Team1.score);
            jLabel3.setText(Team2.name + " " + Team2.score);
        }
        
        
    }//GEN-LAST:event_PlayGameButtonActionPerformed

    /**
     * ErrorMessage: prints error if user input does not make sense
     * @param message: message to be printed
     */
    public void ErrorMessage(String message){
        jLabel1.setText(message);
        jLabel2.setText("");
        jLabel3.setText("");
    }
    
    /**
     * SetName: Sets name of team. Triggers ok to false and prints error message
     *          if bad input.
     * @param   name: name to be used
     * @param   team: team that name is applied to
     * @param   ok: used to check that input makes sense
     * @return  false if input not a string
     *          initial value otherwise
     */
    public boolean SetName(String name, Team team, boolean ok){
        if(name instanceof String){
            team.name = name;
            return ok;
        }
        else{
            ErrorMessage("At least one team name is not a string");
            return false;
        }
    }
    
    /**
     * SetRating:   Sets team ratings. Triggers ok to false and prints error
     *              message if bad input.
     * @param       rating: value to be used
     * @param       team: team that rating is applied to
     * @param       IsO: is rating offense or defense?
     * @param       ok: used to check that input makes sense
     * @return      false if input not 1-99
     *              initial value otherwise
     */
    public boolean SetRating (String rating, Team team, boolean IsO, boolean ok){
        
        if(Integer.parseInt(rating) <= 99 && Integer.parseInt(rating) >= 1){
                
                // offense or defense?
                if(IsO){ team.ORate = Integer.parseInt(rating); }
                else{ team.DRate = Integer.parseInt(rating); }
                
                return ok;
            }
        
            else{
                ErrorMessage("At least one rating is not 1-99");
                return false;
            }
    }
    
    /**
     * SetExpScore: Calculates team's expected score using it's offensive rating
     *              and other's defensive rating. Base value is 75, moves by 1
     *              for every 2 difference in ratings. A 'spread' could be found
     *              by averaging the 2 differences in ORate vs. DRate.
     * @param       ThisTeam: team who's expected score is being calculated
     * @param       OtherTeam: other team
     */
    public void SetExpScore (Team ThisTeam, Team OtherTeam) {
        ThisTeam.ExpScore = ((ThisTeam.ORate - OtherTeam.DRate) / 2) + 75;
    }
    
    /**
     * GetScore:    Gets team's actual score. Gets a random number on a Gaussian
     *              curve with mean of Expected Score and standard deviation of
     *              10. Has been tested vs. real life data to give accurate
     *              win rates. For example:
     * 
     *              Spread  Win Rate
     *              Even    ~50%
     *              -10     ~75%
     *              -20     ~95%
     * @param       team: team who's score is being calculated
     */
    public void GetScore (Team team) {
        Random random = new Random();
        team.score = (int) (10 * random.nextGaussian() + team.ExpScore);
        
        // minimum score is 0
        if(team.score < 0){
            team.score = 0;
        }
    }
    
    /**
     * Main:    runs the program
     * @param   args: unused
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasketballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasketballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasketballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasketballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BasketballUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PlayGameButton;
    private javax.swing.JLabel Team1199;
    private javax.swing.JLabel Team1200;
    private javax.swing.JTextField Team1DRField;
    private javax.swing.JLabel Team1DRLabel;
    private javax.swing.JLabel Team1DRLabel1;
    private javax.swing.JLabel Team1Label;
    private javax.swing.JLabel Team1Label1;
    private javax.swing.JLabel Team1Label2;
    private javax.swing.JLabel Team1Label3;
    private javax.swing.JLabel Team1Label5;
    private javax.swing.JLabel Team1Label6;
    private javax.swing.JTextField Team1NameField;
    private javax.swing.JTextField Team1ORField;
    private javax.swing.JLabel Team1ORLabel;
    private javax.swing.JLabel Team1ORLabel1;
    private javax.swing.JTextField Team2DRField;
    private javax.swing.JTextField Team2NameField;
    private javax.swing.JTextField Team2ORField;
    private javax.swing.JLabel WelcomeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
